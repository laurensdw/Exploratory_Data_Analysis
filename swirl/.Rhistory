install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result2)
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(tidyr)
library(swirl)
swirl()
students
?gather
gather(students, sex, count, -grad)
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?Seperate
?seperate
?separate
seperate(data = res, col = sex_class, into = c("sex", "class"))
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?gather
submit()
submit()
View(students3)
submit()
submit()
students3 %>%
gather(class, class1:class5 ,na.rm = TRUE) %>%
print
students3 %>%
gather(class, -name, class1:class5 ,na.rm = TRUE) %>%
print
#
students3 %>%
gather(class, class1:class5 ,-name, -test,na.rm = TRUE) %>%
print
submit()
students3 %>%
gather(class, grade, class1:class5 ,-name, -test,na.rm = TRUE) %>%
print
submit()
?spread?
?
?spread
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread( name,test ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread( test,name ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(class,grade ) %>%
print
#
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(name,test ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test,c("final", "midterm") ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, class ) %>%
print
gather(class, grade, class1:class5, na.rm = TRUE)
gather(students3, class, grade, class1:class5, na.rm = TRUE)
submit()
submit()
gather(class, grade, class1:class5, na.rm = TRUE)
gather(students3, class, grade, class1:class5, na.rm = TRUE)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test) %>%
print
submit()
library(readr)
parse_number("class5")
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class)) %>%
print
submit()
View(students4)
students4
submit()
submit()
submit()
passed
faild
failed
passed <- mutate(passes, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
sat %>%
select(-contains("total"))
sat %>%
select(-contains("total")) %>%
gather(part_sex, sex, -score_range)
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day'')
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment < now()
this moment <- now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_Date <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_Moment <- update(now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 7, minutes = 39, seconds = 0)
this_moment <- now()
this_moment
this_moment <- update(this_moment, hours = 7, minutes = 39, seconds = 0)
this_Moment <- update(this_Moment, hours = 10, minutes = 16, seconds = 0)
info()
skip()
exit()
bye()
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'gross_product.csv')
df_gp <- read.csv('gross_product.csv', skip=3, col.names = c('CountryCode', 'Ranking', 'X', 'Economy',
'US.Dollars.', 'X1', 'X2', 'X3', 'X4', 'X5'))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'edu.csv')
df_edu <- read.csv('edu.csv')
View(df_gp)
df_gp$X <- NULL
df_gp$X1 <-- NULL
df_gp$X2 <-- NULL
df_gp$X3 <-- NULL
df_gp$X4 <-- NULL
df_gp$X5 <-- NULL
df_gp$X.1 <-- NULL
df_gp$X.2 <-- NULL
df_gp$X.3 <-- NULL
df_gp$X.4 <-- NULL
df_gp$X.5 <-- NULL
df_gp$X1 <- NULL
df_gp$X2 <- NULL
df_gp$X3 <- NULL
df_gp$X4 <- NULL
df_gp$X5 <- NULL
df_gp <- filter(df_gp, Ranking != "")
df_gp <- filter(df_gp, "Ranking" != "")
#download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'gross_product.csv')
df_gp <- read.csv('gross_product.csv', skip=3, col.names = c('CountryCode', 'Ranking', 'X', 'Economy',
'US.Dollars.', 'X1', 'X2', 'X3', 'X4', 'X5'))
#download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'edu.csv')
df_edu <- read.csv('edu.csv')
df_gp$X <- NULL
df_gp$X1 <- NULL
df_gp$X2 <- NULL
df_gp$X3 <- NULL
df_gp$X4 <- NULL
df_gp$X5 <- NULL
df_gp <- filter(df_gp, Ranking != "")
library(dplyr)
df_gp <- filter(df_gp, Ranking != "")
df_gp <- filter(df_gp, Ranking != "")
df_gp <- filter(df_gp, Ranking != "" & Countrycode != "")
df_gp <- filter(df_gp, Ranking != "" & CountryCode != "")
View(df_edu)
df_edu <- filter(df_edu, region != "")
df_edu <- filter(df_edu, Region != "")
df <- merge(df_gp, df_edu)
View(df)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollutin)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
liw
low
high
hist(ppm, col = "green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), lwd=4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main = "Number of Counties in Each Region")
boxplot(data=pollution, col="red", pm25 ~ region)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollutions, region = "east")
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution$pm25, region == "west"), col="green")
hist(subset(pollution$pm25, pollution$region == "west"), col="green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pn25))
with(pollution, plot(latitude, pm25))
abline(h=12)
abline(h = 12, lwd = 2, lty = 2
abline(h = 12, lwd = 2, lty = 2
)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1,2), mar=c(5,4,2,1))
west <- subset(pollution$region == "west")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
R(faithful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
setwd("C:\Users\ldewit\Documents\coursera_local\Exploratory Data Analysis")
setwd("C:/Users/ldewit/Documents/coursera_local/Exploratory_Data_Analysis/swirl")
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
test(mean(cars$speed, max(cars$dist), "SWIRL rules!"))
text(mean(cars$speed, max(cars$dist), "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!"))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm= TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
main="Ozone and wind in New York City"
t
title(main="Ozone and Wind in New York City")
with(airquality, plot(wind, Ozone))
with(airquality, plot(Wind, Ozone))
main(title = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
length(par())
par()
names(par())
par()$pin
par('fg')
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
main(title = "Wind and Ozone in NYC")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality$Month = 5)
eowiq
may
may > -1
may <- 1
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone, pch = 2, col="blue")
points(may$Wind, may$Ozone, pch = 17, col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
i <- 1
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
i <- 1
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,
| 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1,| 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
i<-1
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
i<-1
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
i<-1
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and weather in New York City", outer=TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
